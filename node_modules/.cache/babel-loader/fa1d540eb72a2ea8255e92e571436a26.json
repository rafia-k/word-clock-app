{"ast":null,"code":"var _jsxFileName = \"/Users/rafiak/code/word-clock-app/src/App.js\";\nimport React from 'react';\nimport Word from './Word';\nimport './App.css';\nconst numToWord = {\n  1: 'ONE',\n  2: 'TWO',\n  3: 'THREE',\n  4: 'FOUR',\n  5: 'FIVE',\n  6: 'SIX',\n  7: 'SEVEN',\n  8: 'EIGHT',\n  9: 'NINE',\n  10: 'TEN',\n  11: 'ELEVEN',\n  12: 'TWELVE'\n};\n\nfunction light(map, word) {\n  map.set(word, true);\n}\n\nfunction makeMap(arr) {\n  let map = new Map();\n  arr.forEach(word => map.set(word, false));\n  return map;\n}\n\nfunction lightWords(wordsStartMap, wordsEndMap, hour, mins, m) {\n  // always lit\n  light(wordsStartMap, \"IT\");\n  light(wordsStartMap, \"IS\");\n  light(wordsEndMap, \"O'CLOCK\"); // minutes\n\n  if (28 <= mins && mins < 33) {\n    // SPECIAL CASE --> no half to\n    light(wordsStartMap, \"HALF\");\n    light(wordsStartMap, \"PAST\");\n  } else if (3 <= m && m < 8) {\n    light(wordsStartMap, \"FIVE\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (8 <= m && m < 13) {\n    light(wordsStartMap, \"TEN\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (13 <= m && 18) {\n    light(wordsStartMap, \"QUARTER\");\n  } else if (18 <= m && m < 23) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (23 <= m && m < 28) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"FIVE\");\n    light(wordsStartMap, \"MINUTES\");\n  }\n\n  if (3 <= mins && mins < 30) {\n    light(wordsStartMap, \"PAST\");\n  } else if (30 < mins && mins <= 57) {\n    light(wordsStartMap, \"TO\");\n  } // hour\n\n\n  if (0 <= mins && mins < 30) {\n    light(wordsEndMap, numToWord[hour]);\n  } else {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    light(wordsEndMap, numToWord[hour + 1]);\n  }\n}\n\nfunction App() {\n  const wordsStart = ['IT', 'IS', 'TEN', 'TWENTY', 'FIVE', 'QUARTER', 'HALF', 'MINUTES', 'PAST', 'TO'];\n  const wordsEnd = ['ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE', 'TEN', 'ELEVEN', 'TWELVE', 'O\\'CLOCK']; // initialize states of words\n\n  let wordsStartMap = makeMap(wordsStart);\n  let wordsEndMap = makeMap(wordsEnd); // get date\n\n  var date = new Date();\n  var hour = date.getHours();\n  var mins = date.getMinutes(); // change hour and minutes if needed\n\n  if (hour > 12) {\n    hour -= 12;\n  }\n\n  var m = mins;\n\n  if (m > 30) {\n    m = 60 - m;\n  } // LIGHT WORDS\n\n\n  lightWords(wordsStartMap, wordsEndMap, hour, mins, m);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"WORD CLOCK\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, wordsStart.map(curWord => /*#__PURE__*/React.createElement(Word, {\n    text: curWord,\n    lit: wordsStartMap.get(curWord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), wordsEnd.map(curWord => /*#__PURE__*/React.createElement(Word, {\n    text: curWord,\n    lit: wordsEndMap.get(curWord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafiak/code/word-clock-app/src/App.js"],"names":["React","Word","numToWord","light","map","word","set","makeMap","arr","Map","forEach","lightWords","wordsStartMap","wordsEndMap","hour","mins","m","App","wordsStart","wordsEnd","date","Date","getHours","getMinutes","curWord","get"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Word from './Word';\nimport './App.css';\n\nconst numToWord = {1: 'ONE', 2: 'TWO', 3:'THREE', 4:'FOUR', 5:'FIVE', 6:'SIX', 7:'SEVEN', 8:'EIGHT', 9:'NINE', 10:'TEN', 11:'ELEVEN', 12:'TWELVE'};\n\nfunction light(map, word) {\n  map.set(word, true);\n}\n\nfunction makeMap(arr) {\n  let map = new Map();\n  arr.forEach(word => map.set(word, false));\n  return map;\n}\n\nfunction lightWords(wordsStartMap, wordsEndMap, hour, mins, m) {\n  // always lit\n  light(wordsStartMap, \"IT\");\n  light(wordsStartMap, \"IS\");\n  light(wordsEndMap, \"O'CLOCK\");\n\n  // minutes\n  if (28 <= mins && mins < 33) {\n    // SPECIAL CASE --> no half to\n    light(wordsStartMap, \"HALF\");\n    light(wordsStartMap, \"PAST\");\n  } else if (3 <= m && m < 8) {\n    light(wordsStartMap, \"FIVE\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (8 <= m && m < 13) {\n    light(wordsStartMap, \"TEN\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (13 <= m && 18) {\n    light(wordsStartMap, \"QUARTER\");\n  } else if (18 <= m && m < 23) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"MINUTES\");\n  } else if (23 <= m && m < 28) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"FIVE\");\n    light(wordsStartMap, \"MINUTES\");\n  }\n\n  if (3 <= mins && mins < 30) {\n    light(wordsStartMap, \"PAST\");\n  } else if (30 < mins && mins <= 57) {\n    light(wordsStartMap, \"TO\");\n  }\n\n  // hour\n  if (0 <= mins && mins < 30) {\n    light(wordsEndMap, numToWord[hour]);\n  } else {\n    if (hour === 12) {\n      hour = 0;\n    }\n    light(wordsEndMap, numToWord[hour + 1]);\n  }\n}\n\nfunction App() {  \n  const wordsStart = ['IT', 'IS', 'TEN', 'TWENTY', 'FIVE', 'QUARTER', 'HALF', 'MINUTES', 'PAST', 'TO'];\n  const wordsEnd = ['ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE', 'TEN', 'ELEVEN', 'TWELVE', 'O\\'CLOCK'];\n\n  // initialize states of words\n  let wordsStartMap = makeMap(wordsStart);\n  let wordsEndMap = makeMap(wordsEnd);\n\n  // get date\n  var date = new Date();\n  var hour = date.getHours();\n  var mins = date.getMinutes();\n\n  // change hour and minutes if needed\n\n  if (hour > 12) {\n    hour -= 12;\n  }\n\n  var m = mins;\n  if (m > 30) {\n    m = 60 - m;\n  }\n\n  // LIGHT WORDS\n  lightWords(wordsStartMap, wordsEndMap, hour, mins, m);\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <h3 className=\"title\">WORD CLOCK</h3>\n      </div>\n\n      <div className=\"flex-container\">\n        {wordsStart.map(curWord => (\n          <Word text={curWord} lit={wordsStartMap.get(curWord)}/>\n        ))}\n        {wordsEnd.map(curWord => (\n          <Word text={curWord} lit={wordsEndMap.get(curWord)}/>\n        ))}\n      </div>\n\n      <div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}