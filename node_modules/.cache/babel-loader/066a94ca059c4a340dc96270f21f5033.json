{"ast":null,"code":"var _jsxFileName = \"/Users/rafiak/code/clock-app/src/App.js\";\nimport React from 'react';\nimport Word from './Word';\nimport './App.css';\n\nfunction App() {\n  const numToWord = {\n    1: 'ONE',\n    2: 'TWO',\n    3: 'THREE',\n    4: 'FOUR',\n    5: 'FIVE',\n    6: 'SIX',\n    7: 'SEVEN',\n    8: 'EIGHT',\n    9: 'NINE',\n    10: 'TEN',\n    11: 'ELEVEN',\n    12: 'TWELVE'\n  };\n  const wordsStart = ['IT', 'IS', 'TEN', 'TWENTY', 'FIVE', 'QUARTER', 'HALF', 'PAST', 'TO'];\n  const wordsEnd = ['ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE', 'TEN', 'ELEVEN', 'TWELVE', 'O\\'CLOCK'];\n  const words = wordsStart.concat(wordsEnd); // let wordsLit = words.map(curWord => {\n  //   var wordState = wordMap.get(curWord);\n  //   return {word: curWord, lit: wordState};\n  // });\n  // initialize states of words\n\n  let wordsStartMap = new Map();\n  let wordsEndMap = new Map();\n  wordsStart.forEach(word => wordsStartMap.set(word, false));\n  wordsEnd.forEach(word => wordsEndMap.set(word, false)); // get date\n\n  var date = new Date();\n  var hour = date.getHours();\n  var minutes = date.getMinutes(); // change hour and minutes if needed\n\n  if (hour > 12) {\n    hour -= 12;\n  }\n\n  var m = minutes;\n\n  if (m > 30) {\n    m = 60 - m;\n  } // LIGHT WORDS\n  // always lit\n\n\n  light(wordsStartMap, \"IT\");\n  light(wordsStartMap, \"IS\");\n  light(wordsEndMap, \"O'CLOCK\"); // hours\n\n  if (hour) light(wordsEndMap, numToWord[hour]); // fix\n  // minutes\n\n  if (28 <= minutes && minutes < 33) {\n    // SPECIAL CASE --> no half to\n    light(wordsStartMap, \"HALF\");\n    light(wordsStartMap, \"PAST\");\n    console.log(\"half past\");\n  } else if (3 <= m && m < 8) {\n    light(wordsStartMap, \"FIVE\");\n    console.log(\"five\");\n  } else if (8 <= m && m < 13) {\n    light(wordsStartMap, \"TEN\");\n    console.log(\"ten\");\n  } else if (13 <= m && 18) {\n    light(wordsStartMap, \"QUARTER\");\n    console.log(\"quarter\");\n  } else if (18 <= m && m < 23) {\n    light(wordsStartMap, \"TWENTY\");\n    console.log(\"twenty\");\n  } else if (23 <= m && m < 28) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"FIVE\");\n    console.log(\"twenty five\");\n  } // hour\n\n\n  if (3 <= minutes && minutes < 30) {\n    light(wordsStartMap, \"PAST\");\n    light(wordsEndMap, numToWord[hour]);\n    console.log(\"past\");\n  } else if (30 < minutes && minutes <= 57) {\n    light(wordsStartMap, \"TO\");\n\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    light(wordsEndMap, numToWord[hour + 1]);\n    console.log(\"to\");\n  }\n\n  function light(map, word) {\n    map.set(word, true);\n  } // concatenate maps\n\n\n  let wordMap = new Map([...wordsStartMap, ...wordsEndMap]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"WORD CLOCK\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, wordsStart.map(curWord => /*#__PURE__*/React.createElement(Word, {\n    text: curWord,\n    lit: wordsStartMap.get(curWord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), wordsEnd.map(curWord => /*#__PURE__*/React.createElement(Word, {\n    text: curWord,\n    lit: wordsEndMap.get(curWord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rafiak/code/clock-app/src/App.js"],"names":["React","Word","App","numToWord","wordsStart","wordsEnd","words","concat","wordsStartMap","Map","wordsEndMap","forEach","word","set","date","Date","hour","getHours","minutes","getMinutes","m","light","console","log","map","wordMap","curWord","get"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Word from './Word';\nimport './App.css';\n\nfunction App() {\n  const numToWord = {1: 'ONE', 2: 'TWO', 3:'THREE', 4:'FOUR', 5:'FIVE', 6:'SIX', 7:'SEVEN', 8:'EIGHT', 9:'NINE', 10:'TEN', 11:'ELEVEN', 12:'TWELVE'};\n  \n  const wordsStart = ['IT', 'IS', 'TEN', 'TWENTY', 'FIVE', 'QUARTER', 'HALF', 'PAST', 'TO'];\n  const wordsEnd = ['ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE', 'TEN', 'ELEVEN', 'TWELVE', 'O\\'CLOCK'];\n  const words = wordsStart.concat(wordsEnd);\n\n  // let wordsLit = words.map(curWord => {\n  //   var wordState = wordMap.get(curWord);\n  //   return {word: curWord, lit: wordState};\n  // });\n\n  // initialize states of words\n  let wordsStartMap = new Map();\n  let wordsEndMap = new Map();\n  wordsStart.forEach(word => wordsStartMap.set(word, false));\n  wordsEnd.forEach(word => wordsEndMap.set(word, false));\n\n  // get date\n  var date = new Date();\n  var hour = date.getHours();\n  var minutes = date.getMinutes();\n\n  // change hour and minutes if needed\n  if (hour > 12) {\n    hour -= 12;\n  }\n\n  var m = minutes;\n  if (m > 30) {\n    m = 60 - m;\n  }\n\n  // LIGHT WORDS\n\n  // always lit\n  light(wordsStartMap, \"IT\");\n  light(wordsStartMap, \"IS\");\n  light(wordsEndMap, \"O'CLOCK\");\n\n  // hours\n  if (hour )\n  light(wordsEndMap, numToWord[hour]); // fix\n\n  // minutes\n  if (28 <= minutes && minutes < 33) {\n    // SPECIAL CASE --> no half to\n    light(wordsStartMap, \"HALF\");\n    light(wordsStartMap, \"PAST\");\n    console.log(\"half past\");\n  } else if (3 <= m && m < 8) {\n    light(wordsStartMap, \"FIVE\");\n    console.log(\"five\");\n  } else if (8 <= m && m < 13) {\n    light(wordsStartMap, \"TEN\");\n    console.log(\"ten\");\n  } else if (13 <= m && 18) {\n    light(wordsStartMap, \"QUARTER\");\n    console.log(\"quarter\");\n  } else if (18 <= m && m < 23) {\n    light(wordsStartMap, \"TWENTY\");\n    console.log(\"twenty\");\n  } else if (23 <= m && m < 28) {\n    light(wordsStartMap, \"TWENTY\");\n    light(wordsStartMap, \"FIVE\");\n    console.log(\"twenty five\");\n  }\n\n  // hour\n  if (3 <= minutes && minutes < 30) {\n    light(wordsStartMap, \"PAST\");\n    light(wordsEndMap, numToWord[hour]);\n    console.log(\"past\");\n  } else if (30 < minutes && minutes <= 57) {\n    light(wordsStartMap, \"TO\");\n\n    if (hour === 12) {\n      hour = 0;\n    }\n    light(wordsEndMap, numToWord[hour + 1]);\n    console.log(\"to\");\n  }\n\n\n  function light(map, word) {\n    map.set(word, true);\n  }\n\n  // concatenate maps\n  let wordMap = new Map([...wordsStartMap, ...wordsEndMap]);\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <h3 className=\"title\">WORD CLOCK</h3>\n      </div>\n\n      <div className=\"flex-container\">\n        {wordsStart.map(curWord => (\n          <Word text={curWord} lit={wordsStartMap.get(curWord)}/>\n        ))}\n        {wordsEnd.map(curWord => (\n          <Word text={curWord} lit={wordsEndMap.get(curWord)}/>\n        ))}\n      </div>\n\n      <div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}